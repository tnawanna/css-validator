/* CssParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. CssParserTokenManager.java */
package org.w3c.css.parser.analyzer;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.net.URL;
import org.w3c.css.values.CssValue;
import org.w3c.css.values.CssOperator;
import org.w3c.css.values.CssAngle;
import org.w3c.css.values.CssCheckableValue;
import org.w3c.css.values.CssExpression;
import org.w3c.css.values.CssString;
import org.w3c.css.values.CssURL;
import org.w3c.css.values.CssLength;
import org.w3c.css.values.CssNumber;
import org.w3c.css.values.CssAttr;
import org.w3c.css.values.CssBracket;
import org.w3c.css.values.CssCalc;
import org.w3c.css.values.CssColor;
import org.w3c.css.values.CssComparator;
import org.w3c.css.values.CssFlexibleLength;
import org.w3c.css.values.CssFrequency;
import org.w3c.css.values.CssHashIdent;
import org.w3c.css.values.CssIdent;
import org.w3c.css.values.CssImage;
import org.w3c.css.values.CssPercentage;
import org.w3c.css.values.CssTime;
import org.w3c.css.values.CssSwitch;
import org.w3c.css.values.CssFunction;
import org.w3c.css.values.CssUnicodeRange;
import org.w3c.css.values.CssResolution;
import org.w3c.css.values.CssRatio;
import org.w3c.css.values.CssSemitone;
import org.w3c.css.values.CssTypes;
import org.w3c.css.values.CssVolume;
import org.w3c.css.properties.css.CssProperty;
import org.w3c.css.parser.CssError;
import org.w3c.css.parser.CssErrorToken;
import org.w3c.css.parser.CssSelectors;
import org.w3c.css.parser.CssParseException;
import org.w3c.css.parser.AtRule;
import org.w3c.css.atrules.svg.AtRuleColorProfile;
import org.w3c.css.atrules.css.AtRuleCounterStyle;
import org.w3c.css.atrules.css.AtRuleFontFace;
import org.w3c.css.atrules.css.AtRuleKeyframes;
import org.w3c.css.atrules.css.AtRuleMedia;
import org.w3c.css.atrules.css.media.MediaFeature;
import org.w3c.css.atrules.css.media.MediaRangeFeature;
import org.w3c.css.atrules.css.AtRulePage;
import org.w3c.css.atrules.css.AtRulePhoneticAlphabet;
import org.w3c.css.atrules.css.AtRulePreference;
import org.w3c.css.atrules.css.AtRuleSupports;
import org.w3c.css.atrules.css.supports.SupportsFeature;
import org.w3c.css.atrules.css.AtRuleViewport;
import org.w3c.css.util.ApplContext;
import org.w3c.css.util.CssProfile;
import org.w3c.css.util.CssVersion;
import org.w3c.css.util.InvalidParamException;
import org.w3c.css.util.WarningParamException;
import org.w3c.css.util.Util;
import org.w3c.css.selectors.AdjacentSiblingSelector;
import org.w3c.css.selectors.AttributeSelector;
import org.w3c.css.selectors.ChildSelector;
import org.w3c.css.selectors.ClassSelector;
import org.w3c.css.selectors.DescendantSelector;
import org.w3c.css.selectors.GeneralSiblingSelector;
import org.w3c.css.selectors.IdSelector;
import org.w3c.css.selectors.TypeSelector;
import org.w3c.css.selectors.UniversalSelector;
import org.w3c.css.selectors.attributes.AttributeAny;
import org.w3c.css.selectors.attributes.AttributeBegin;
import org.w3c.css.selectors.attributes.AttributeExact;
import org.w3c.css.selectors.attributes.AttributeOneOf;
import org.w3c.css.selectors.attributes.AttributeStart;
import org.w3c.css.selectors.attributes.AttributeSubstr;
import org.w3c.css.selectors.attributes.AttributeSuffix;

/** Token Manager. */
@SuppressWarnings("unused")public class CssParserTokenManager implements CssParserConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 33:
         jjmatchedKind = 126;
         return jjMoveNfa_0(7, 0);
      case 36:
         jjmatchedKind = 127;
         return jjMoveStringLiteralDfa1_0(0x400000000000L, 0x0L, 0x0L);
      case 37:
         jjmatchedKind = 128;
         return jjMoveNfa_0(7, 0);
      case 38:
         jjmatchedKind = 129;
         return jjMoveNfa_0(7, 0);
      case 40:
         jjmatchedKind = 56;
         return jjMoveNfa_0(7, 0);
      case 41:
         jjmatchedKind = 55;
         return jjMoveNfa_0(7, 0);
      case 42:
         jjmatchedKind = 53;
         return jjMoveStringLiteralDfa1_0(0x800000000000L, 0x0L, 0x0L);
      case 45:
         jjmatchedKind = 28;
         return jjMoveStringLiteralDfa1_0(0x800000L, 0x0L, 0x0L);
      case 46:
         jjmatchedKind = 54;
         return jjMoveNfa_0(7, 0);
      case 47:
         jjmatchedKind = 50;
         return jjMoveNfa_0(7, 0);
      case 58:
         jjmatchedKind = 57;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x80000000000800L, 0x0L);
      case 59:
         jjmatchedKind = 49;
         return jjMoveNfa_0(7, 0);
      case 60:
         jjmatchedKind = 132;
         return jjMoveStringLiteralDfa1_0(0x400000L, 0x0L, 0x40L);
      case 61:
         jjmatchedKind = 48;
         return jjMoveNfa_0(7, 0);
      case 63:
         jjmatchedKind = 131;
         return jjMoveNfa_0(7, 0);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x3fffffff000L, 0x0L);
      case 91:
         jjmatchedKind = 51;
         return jjMoveNfa_0(7, 0);
      case 93:
         jjmatchedKind = 52;
         return jjMoveNfa_0(7, 0);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x200000000000L, 0x0L, 0x0L);
      case 96:
         jjmatchedKind = 130;
         return jjMoveNfa_0(7, 0);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x200000000L, 0x200000000000000L, 0x0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x40000000000000L, 0x0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa1_0(0x1000000000L, 0x0L, 0x0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_0(0xc00000000L, 0x0L, 0x0L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x400000000000000L, 0x0L);
      case 124:
         jjmatchedKind = 133;
         return jjMoveStringLiteralDfa1_0(0x2000000L, 0x0L, 0x0L);
      case 125:
         jjmatchedKind = 44;
         return jjMoveNfa_0(7, 0);
      default :
         return jjMoveNfa_0(7, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1, long active2){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 0);
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000L, active1, 0L, active2, 0L);
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000L, active1, 0L, active2, 0L);
      case 58:
         if ((active1 & 0x800L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 1;
         }
         break;
      case 61:
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 25;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x400000000000L) != 0L)
         {
            jjmatchedKind = 46;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x800000000000L) != 0L)
         {
            jjmatchedKind = 47;
            jjmatchedPos = 1;
         }
         else if ((active2 & 0x40L) != 0L)
         {
            jjmatchedKind = 134;
            jjmatchedPos = 1;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x440000000000000L, active2, 0L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0xf80000L, active2, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x7000001000L, active2, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x200000000L, active2, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40000000L, active2, 0L);
      case 75:
      case 107:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400000000L, active2, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x7000000L, active2, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x100000000L, active2, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0xa00000000L, active1, 0x80000080000000L, active2, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000L, active1, 0L, active2, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x8800002000L, active2, 0L);
      case 82:
      case 114:
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 34;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x38000000L, active2, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10000000000L, active2, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000000007c000L, active2, 0L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000000000L, active2, 0L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1, long old2, long active2){
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjMoveNfa_0(7, 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 1);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000L, active1, 0L);
      case 62:
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 23;
            jjmatchedPos = 2;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x80002000L);
      case 68:
      case 100:
         if ((active0 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 33;
            jjmatchedPos = 2;
         }
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x507000000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x8000001000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20038000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x40000000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x40000000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x80007200ffc000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x400000800000000L);
      case 84:
      case 116:
         if ((active0 & 0x1000000000L) != 0L)
         {
            jjmatchedKind = 36;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200000000000000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10000000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 2);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 2);
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x400000000000000L) != 0L)
         {
            jjmatchedKind = 122;
            jjmatchedPos = 3;
         }
         break;
      case 45:
         if ((active0 & 0x400000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 3;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20800000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x7000000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40000038002000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x80000000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8000000000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1004007c000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200000000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x80000000f80000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x6000000000L);
      case 89:
      case 121:
         if ((active0 & 0x800000000L) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 3);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 3);
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x40000000000000L) != 0L)
         {
            jjmatchedKind = 118;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 119;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x200000000000000L) != 0L)
         {
            jjmatchedKind = 121;
            jjmatchedPos = 4;
         }
         break;
      case 45:
         return jjMoveStringLiteralDfa5_0(active1, 0x7c000L);
      case 69:
      case 101:
         if ((active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x80000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa5_0(active1, 0xc00000000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active1, 0x38000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active1, 0x100000000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active1, 0xe000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active1, 0x1040000000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa5_0(active1, 0x10000000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active1, 0x1000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa5_0(active1, 0x207f80000L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa5_0(active1, 0x20000000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 4);
}
private int jjMoveStringLiteralDfa5_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 4);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active1, 0x207000000L);
      case 65:
      case 97:
         if ((active1 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 5;
         }
         break;
      case 67:
      case 99:
         return jjMoveStringLiteralDfa6_0(active1, 0x10000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa6_0(active1, 0x8800000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa6_0(active1, 0xc000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active1, 0x10000f80000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa6_0(active1, 0x20000000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active1, 0x1440060000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active1, 0x80001000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa6_0(active1, 0x6038000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 5);
}
private int jjMoveStringLiteralDfa6_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 5);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 5);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active1, 0x1038000000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa7_0(active1, 0x400000000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa7_0(active1, 0x4000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active1, 0x600001d000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active1, 0x200000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa7_0(active1, 0x60000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa7_0(active1, 0x2f80000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa7_0(active1, 0x20000000000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_0(active1, 0x80000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active1, 0x10800000000L);
      case 84:
      case 116:
         if ((active1 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 94;
            jjmatchedPos = 6;
         }
         return jjMoveStringLiteralDfa7_0(active1, 0x8001000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 6);
}
private int jjMoveStringLiteralDfa7_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 6);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 6);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa8_0(active1, 0xf80000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active1, 0x280000000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa8_0(active1, 0x20000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa8_0(active1, 0x800000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa8_0(active1, 0xc000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa8_0(active1, 0x60000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active1, 0x8002000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa8_0(active1, 0x410000000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa8_0(active1, 0x10000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa8_0(active1, 0x5000000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa8_0(active1, 0x1000000000L);
      case 82:
      case 114:
         if ((active1 & 0x2000000000L) != 0L)
         {
            jjmatchedKind = 101;
            jjmatchedPos = 7;
         }
         return jjMoveStringLiteralDfa8_0(active1, 0x24000000000L);
      case 84:
      case 116:
         if ((active1 & 0x1000L) != 0L)
         {
            jjmatchedKind = 76;
            jjmatchedPos = 7;
         }
         return jjMoveStringLiteralDfa8_0(active1, 0x10008000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 7);
}
private int jjMoveStringLiteralDfa8_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 7);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 7);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa9_0(active1, 0x4000000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active1, 0x8280200000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa9_0(active1, 0x2000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa9_0(active1, 0x400000000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa9_0(active1, 0x60000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa9_0(active1, 0x10000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa9_0(active1, 0x180000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa9_0(active1, 0x800000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa9_0(active1, 0x28000000L);
      case 80:
      case 112:
         if ((active1 & 0x1000000L) != 0L)
         {
            jjmatchedKind = 88;
            jjmatchedPos = 8;
         }
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_0(active1, 0x1000c00000L);
      case 83:
      case 115:
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 104;
            jjmatchedPos = 8;
         }
         break;
      case 84:
      case 116:
         if ((active1 & 0x8000L) != 0L)
         {
            jjmatchedKind = 79;
            jjmatchedPos = 8;
         }
         else if ((active1 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 8;
         }
         return jjMoveStringLiteralDfa9_0(active1, 0x4014000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 8);
}
private int jjMoveStringLiteralDfa9_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 8);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 8);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active1, 0x8000004000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa10_0(active1, 0x800000000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa10_0(active1, 0x12000000L);
      case 69:
      case 101:
         if ((active1 & 0x80000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 9;
         }
         else if ((active1 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 97;
            jjmatchedPos = 9;
         }
         return jjMoveStringLiteralDfa10_0(active1, 0x390000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa10_0(active1, 0xc00000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_0(active1, 0x1000000000L);
      case 80:
      case 112:
         if ((active1 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 91;
            jjmatchedPos = 9;
         }
         break;
      case 83:
      case 115:
         if ((active1 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 98;
            jjmatchedPos = 9;
         }
         return jjMoveStringLiteralDfa10_0(active1, 0x4000000000L);
      case 84:
      case 116:
         if ((active1 & 0x20000L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 9;
         }
         return jjMoveStringLiteralDfa10_0(active1, 0x24040000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 9);
}
private int jjMoveStringLiteralDfa10_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 9);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 9);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa11_0(active1, 0x40000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_0(active1, 0x8000000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa11_0(active1, 0x4000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa11_0(active1, 0x10000000L);
      case 69:
      case 101:
         if ((active1 & 0x800000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 10;
         }
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active1, 0x1000180000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa11_0(active1, 0xc00000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa11_0(active1, 0x2000000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa11_0(active1, 0x200000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa11_0(active1, 0x4000000L);
      case 82:
      case 114:
         if ((active1 & 0x10000L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 10;
         }
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa11_0(active1, 0x4020000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 10);
}
private int jjMoveStringLiteralDfa11_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 10);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 10);
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa12_0(active1, 0x40000L);
      case 69:
      case 101:
         if ((active1 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 11;
         }
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa12_0(active1, 0xc00000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa12_0(active1, 0x1000000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa12_0(active1, 0x8010000000L);
      case 77:
      case 109:
         if ((active1 & 0x4000000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 11;
         }
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa12_0(active1, 0x20004000L);
      case 84:
      case 116:
         if ((active1 & 0x100000L) != 0L)
         {
            jjmatchedKind = 84;
            jjmatchedPos = 11;
         }
         return jjMoveStringLiteralDfa12_0(active1, 0x280000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa12_0(active1, 0x4000000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 11);
}
private int jjMoveStringLiteralDfa12_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 11);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 11);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa13_0(active1, 0x80000L);
      case 69:
      case 101:
         if ((active1 & 0x10000000L) != 0L)
         {
            jjmatchedKind = 92;
            jjmatchedPos = 12;
         }
         return jjMoveStringLiteralDfa13_0(active1, 0x200000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa13_0(active1, 0x5000000000L);
      case 77:
      case 109:
         if ((active1 & 0x20000000L) != 0L)
         {
            jjmatchedKind = 93;
            jjmatchedPos = 12;
         }
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa13_0(active1, 0x40000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa13_0(active1, 0x8000000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa13_0(active1, 0x4000L);
      case 84:
      case 116:
         if ((active1 & 0x400000L) != 0L)
         {
            jjmatchedKind = 86;
            jjmatchedPos = 12;
         }
         return jjMoveStringLiteralDfa13_0(active1, 0x800000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 12);
}
private int jjMoveStringLiteralDfa13_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 12);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 12);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa14_0(active1, 0x800000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa14_0(active1, 0x80000L);
      case 69:
      case 101:
         if ((active1 & 0x1000000000L) != 0L)
         {
            jjmatchedKind = 100;
            jjmatchedPos = 13;
         }
         else if ((active1 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 102;
            jjmatchedPos = 13;
         }
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa14_0(active1, 0x8000000000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa14_0(active1, 0x4000L);
      case 82:
      case 114:
         if ((active1 & 0x200000L) != 0L)
         {
            jjmatchedKind = 85;
            jjmatchedPos = 13;
         }
         return jjMoveStringLiteralDfa14_0(active1, 0x40000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 13);
}
private int jjMoveStringLiteralDfa14_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 13);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 13);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa15_0(active1, 0x8000000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa15_0(active1, 0x800000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa15_0(active1, 0x4000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa15_0(active1, 0x40000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa15_0(active1, 0x80000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 14);
}
private int jjMoveStringLiteralDfa15_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 14);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 14);
   }
   switch(curChar)
   {
      case 66:
      case 98:
         return jjMoveStringLiteralDfa16_0(active1, 0x8000000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa16_0(active1, 0x40000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa16_0(active1, 0x800000L);
      case 82:
      case 114:
         if ((active1 & 0x4000L) != 0L)
         {
            jjmatchedKind = 78;
            jjmatchedPos = 15;
         }
         return jjMoveStringLiteralDfa16_0(active1, 0x80000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 15);
}
private int jjMoveStringLiteralDfa16_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 15);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 15);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa17_0(active1, 0x8000000000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa17_0(active1, 0x80000L);
      case 82:
      case 114:
         if ((active1 & 0x40000L) != 0L)
         {
            jjmatchedKind = 82;
            jjmatchedPos = 16;
         }
         return jjMoveStringLiteralDfa17_0(active1, 0x800000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 16);
}
private int jjMoveStringLiteralDfa17_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 16);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 16);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa18_0(active1, 0x80000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa18_0(active1, 0x800000L);
      case 84:
      case 116:
         if ((active1 & 0x8000000000L) != 0L)
         {
            jjmatchedKind = 103;
            jjmatchedPos = 17;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 17);
}
private int jjMoveStringLiteralDfa18_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 17);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 17);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa19_0(active1, 0x800000L);
      case 82:
      case 114:
         if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 83;
            jjmatchedPos = 18;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 18);
}
private int jjMoveStringLiteralDfa19_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 18);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 18);
   }
   switch(curChar)
   {
      case 82:
      case 114:
         if ((active1 & 0x800000L) != 0L)
         {
            jjmatchedKind = 87;
            jjmatchedPos = 19;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 19);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int strKind = jjmatchedKind;
   int strPos = jjmatchedPos;
   int seenUpto;
   input_stream.backup(seenUpto = curPos + 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { throw new Error("Internal Error"); }
   curPos = 0;
   int startsAt = 0;
   jjnewStateCnt = 903;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 72)
                        kind = 72;
                     { jjCheckNAddStates(0, 110); }
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddStates(111, 133); }
                  }
                  else if (curChar == 33)
                     { jjCheckNAddStates(134, 137); }
                  else if (curChar == 46)
                     { jjCheckNAddStates(138, 166); }
                  else if (curChar == 35)
                     { jjCheckNAddStates(167, 171); }
                  else if (curChar == 45)
                     { jjAddStates(172, 176); }
                  else if (curChar == 39)
                  {
                     if (kind > 38)
                        kind = 38;
                     { jjCheckNAddStates(177, 181); }
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 38)
                        kind = 38;
                     { jjCheckNAddStates(182, 186); }
                  }
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 215;
                  else if (curChar == 44)
                  {
                     if (kind > 31)
                        kind = 31;
                  }
                  else if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 11;
                  else if (curChar == 43)
                  {
                     if (kind > 27)
                        kind = 27;
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 0;
                  if (curChar == 45)
                     { jjAddStates(187, 188); }
                  else if (curChar == 60)
                     { jjCheckNAddStates(189, 193); }
                  else if (curChar == 62)
                  {
                     if (kind > 29)
                        kind = 29;
                  }
                  break;
               case 0:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (curChar == 42)
                     { jjCheckNAddStates(194, 196); }
                  break;
               case 3:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 4:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 5:
                  if (curChar == 42)
                     { jjCheckNAddStates(197, 199); }
                  break;
               case 6:
                  if (curChar == 47 && kind > 1)
                     kind = 1;
                  break;
               case 9:
                  if (curChar == 43 && kind > 27)
                     kind = 27;
                  break;
               case 10:
                  if (curChar == 62 && kind > 29)
                     kind = 29;
                  break;
               case 11:
                  if (curChar == 61 && kind > 30)
                     kind = 30;
                  break;
               case 12:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 44 && kind > 31)
                     kind = 31;
                  break;
               case 14:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 16:
                  if ((0xfffffdffffffffffL & l) != 0L)
                     { jjAddStates(200, 201); }
                  break;
               case 17:
                  if (curChar == 41 && kind > 42)
                     kind = 42;
                  break;
               case 27:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 44:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 52:
                  if (curChar == 45)
                     { jjAddStates(202, 203); }
                  break;
               case 54:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(54, 55); }
                  break;
               case 56:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(54, 55); }
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(204, 208); }
                  break;
               case 58:
                  if (curChar != 10)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(54, 55); }
                  break;
               case 59:
               case 68:
                  if (curChar == 13)
                     { jjCheckNAdd(58); }
                  break;
               case 60:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(54, 55); }
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(209, 216); }
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(217, 220); }
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(221, 225); }
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(226, 231); }
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(232, 238); }
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(239, 243); }
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(244, 251); }
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(252, 255); }
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(256, 260); }
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(261, 266); }
                  break;
               case 73:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(267, 273); }
                  break;
               case 74:
                  if (curChar == 40 && kind > 120)
                     kind = 120;
                  break;
               case 79:
                  if (curChar == 60)
                     { jjCheckNAddStates(189, 193); }
                  break;
               case 81:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(274, 278); }
                  break;
               case 82:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(83, 84); }
                  break;
               case 83:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(83, 84); }
                  break;
               case 84:
                  if (curChar == 42)
                     { jjCheckNAddStates(279, 281); }
                  break;
               case 85:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(86, 87); }
                  break;
               case 86:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(86, 87); }
                  break;
               case 87:
                  if (curChar == 42)
                     { jjCheckNAddStates(282, 284); }
                  break;
               case 88:
                  if (curChar == 47)
                     { jjCheckNAddStates(274, 278); }
                  break;
               case 89:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 90:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(91, 200); }
                  break;
               case 92:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(285, 290); }
                  break;
               case 93:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(291, 296); }
                  break;
               case 94:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(95, 96); }
                  break;
               case 95:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(95, 96); }
                  break;
               case 96:
                  if (curChar == 42)
                     { jjCheckNAddStates(297, 299); }
                  break;
               case 97:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(98, 99); }
                  break;
               case 98:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(98, 99); }
                  break;
               case 99:
                  if (curChar == 42)
                     { jjCheckNAddStates(300, 302); }
                  break;
               case 100:
                  if (curChar == 47)
                     { jjCheckNAddStates(291, 296); }
                  break;
               case 101:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 102:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(103, 119); }
                  break;
               case 104:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(303, 305); }
                  break;
               case 105:
                  if (curChar == 61)
                     { jjCheckNAddStates(306, 310); }
                  break;
               case 106:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(107, 149); }
                  break;
               case 108:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(311, 316); }
                  break;
               case 109:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(317, 322); }
                  break;
               case 110:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(111, 112); }
                  break;
               case 111:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(111, 112); }
                  break;
               case 112:
                  if (curChar == 42)
                     { jjCheckNAddStates(323, 325); }
                  break;
               case 113:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(114, 115); }
                  break;
               case 114:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(114, 115); }
                  break;
               case 115:
                  if (curChar == 42)
                     { jjCheckNAddStates(326, 328); }
                  break;
               case 116:
                  if (curChar == 47)
                     { jjCheckNAddStates(317, 322); }
                  break;
               case 117:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 118:
                  if (curChar == 62 && kind > 124)
                     kind = 124;
                  break;
               case 120:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(303, 305); }
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(329, 334); }
                  break;
               case 123:
                  if (curChar == 10)
                     { jjCheckNAddStates(303, 305); }
                  break;
               case 124:
               case 132:
                  if (curChar == 13)
                     { jjCheckNAdd(123); }
                  break;
               case 125:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(303, 305); }
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(335, 343); }
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(344, 348); }
                  break;
               case 128:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(349, 354); }
                  break;
               case 129:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(355, 361); }
                  break;
               case 130:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(362, 369); }
                  break;
               case 131:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(370, 375); }
                  break;
               case 133:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(376, 384); }
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(385, 389); }
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(390, 395); }
                  break;
               case 136:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(396, 402); }
                  break;
               case 137:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(403, 410); }
                  break;
               case 139:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(311, 316); }
                  break;
               case 140:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(411, 418); }
                  break;
               case 141:
                  if (curChar == 10)
                     { jjCheckNAddStates(311, 316); }
                  break;
               case 142:
               case 151:
                  if (curChar == 13)
                     { jjCheckNAdd(141); }
                  break;
               case 143:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(419, 427); }
                  break;
               case 144:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(428, 438); }
                  break;
               case 145:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(439, 445); }
                  break;
               case 146:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(446, 453); }
                  break;
               case 147:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(454, 462); }
                  break;
               case 148:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(463, 472); }
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(473, 480); }
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(481, 491); }
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(492, 498); }
                  break;
               case 154:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(499, 506); }
                  break;
               case 155:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(507, 515); }
                  break;
               case 156:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(516, 525); }
                  break;
               case 157:
                  if (curChar == 34)
                     { jjCheckNAddStates(526, 528); }
                  break;
               case 158:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(526, 528); }
                  break;
               case 159:
                  if (curChar == 34)
                     { jjCheckNAddStates(529, 533); }
                  break;
               case 161:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(526, 528); }
                  break;
               case 162:
                  if (curChar == 10)
                     { jjCheckNAddStates(526, 528); }
                  break;
               case 163:
               case 166:
                  if (curChar == 13)
                     { jjCheckNAdd(162); }
                  break;
               case 164:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(526, 528); }
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(534, 539); }
                  break;
               case 167:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(526, 528); }
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(540, 548); }
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(549, 553); }
                  break;
               case 170:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(554, 559); }
                  break;
               case 171:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(560, 566); }
                  break;
               case 172:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(567, 574); }
                  break;
               case 173:
                  if (curChar == 39)
                     { jjCheckNAddStates(575, 577); }
                  break;
               case 174:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(575, 577); }
                  break;
               case 175:
                  if (curChar == 39)
                     { jjCheckNAddStates(529, 533); }
                  break;
               case 177:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(575, 577); }
                  break;
               case 178:
                  if (curChar == 10)
                     { jjCheckNAddStates(575, 577); }
                  break;
               case 179:
               case 182:
                  if (curChar == 13)
                     { jjCheckNAdd(178); }
                  break;
               case 180:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(575, 577); }
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(578, 583); }
                  break;
               case 183:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(575, 577); }
                  break;
               case 184:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(584, 592); }
                  break;
               case 185:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(593, 597); }
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(598, 603); }
                  break;
               case 187:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(604, 610); }
                  break;
               case 188:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(611, 618); }
                  break;
               case 190:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(285, 290); }
                  break;
               case 191:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(619, 626); }
                  break;
               case 192:
                  if (curChar == 10)
                     { jjCheckNAddStates(285, 290); }
                  break;
               case 193:
               case 202:
                  if (curChar == 13)
                     { jjCheckNAdd(192); }
                  break;
               case 194:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(627, 635); }
                  break;
               case 195:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(636, 646); }
                  break;
               case 196:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(647, 653); }
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(654, 661); }
                  break;
               case 198:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(662, 670); }
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(671, 680); }
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(681, 688); }
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(689, 699); }
                  break;
               case 204:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(700, 706); }
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(707, 714); }
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(715, 723); }
                  break;
               case 207:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(724, 733); }
                  break;
               case 214:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if (curChar == 47)
                     { jjCheckNAddStates(734, 737); }
                  break;
               case 216:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(738, 742); }
                  break;
               case 217:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(218, 219); }
                  break;
               case 218:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(218, 219); }
                  break;
               case 219:
                  if (curChar == 42)
                     { jjCheckNAddStates(743, 745); }
                  break;
               case 220:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(221, 222); }
                  break;
               case 221:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(221, 222); }
                  break;
               case 222:
                  if (curChar == 42)
                     { jjCheckNAddStates(746, 748); }
                  break;
               case 223:
                  if (curChar == 47)
                     { jjCheckNAddStates(738, 742); }
                  break;
               case 224:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 225:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(226, 249); }
                  break;
               case 227:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(749, 752); }
                  break;
               case 228:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(753, 755); }
                  break;
               case 229:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(230, 231); }
                  break;
               case 230:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(230, 231); }
                  break;
               case 231:
                  if (curChar == 42)
                     { jjCheckNAddStates(756, 758); }
                  break;
               case 232:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(233, 234); }
                  break;
               case 233:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(233, 234); }
                  break;
               case 234:
                  if (curChar == 42)
                     { jjCheckNAddStates(759, 761); }
                  break;
               case 235:
                  if (curChar == 47)
                     { jjCheckNAddStates(753, 755); }
                  break;
               case 236:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 237:
                  if (curChar == 62 && kind > 125)
                     kind = 125;
                  break;
               case 239:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(749, 752); }
                  break;
               case 240:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(762, 767); }
                  break;
               case 241:
                  if (curChar == 10)
                     { jjCheckNAddStates(749, 752); }
                  break;
               case 242:
               case 251:
                  if (curChar == 13)
                     { jjCheckNAdd(241); }
                  break;
               case 243:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(768, 773); }
                  break;
               case 244:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(774, 782); }
                  break;
               case 245:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(783, 787); }
                  break;
               case 246:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(788, 793); }
                  break;
               case 247:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(794, 800); }
                  break;
               case 248:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(801, 808); }
                  break;
               case 250:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(809, 814); }
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(815, 823); }
                  break;
               case 253:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(824, 828); }
                  break;
               case 254:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(829, 834); }
                  break;
               case 255:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(835, 841); }
                  break;
               case 256:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(842, 849); }
                  break;
               case 257:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 258:
                  if (curChar == 45)
                     { jjAddStates(187, 188); }
                  break;
               case 263:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 271:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 278:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(111, 133); }
                  break;
               case 279:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(280, 281); }
                  break;
               case 280:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(280, 281); }
                  break;
               case 281:
                  if (curChar == 42)
                     { jjCheckNAddStates(850, 852); }
                  break;
               case 282:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(283, 284); }
                  break;
               case 283:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(283, 284); }
                  break;
               case 284:
                  if (curChar == 42)
                     { jjCheckNAddStates(853, 855); }
                  break;
               case 285:
                  if (curChar != 47)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(286, 287); }
                  break;
               case 286:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 287:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(286, 287); }
                  break;
               case 288:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(289, 290); }
                  break;
               case 289:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(289, 290); }
                  break;
               case 290:
                  if (curChar == 42)
                     { jjCheckNAddStates(856, 858); }
                  break;
               case 291:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(292, 293); }
                  break;
               case 292:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(292, 293); }
                  break;
               case 293:
                  if (curChar == 42)
                     { jjCheckNAddStates(859, 861); }
                  break;
               case 294:
                  if (curChar == 47)
                     { jjCheckNAddStates(862, 864); }
                  break;
               case 295:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 296:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(862, 864); }
                  break;
               case 298:
                  if (curChar == 61 && kind > 24)
                     kind = 24;
                  break;
               case 299:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(300, 301); }
                  break;
               case 300:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(300, 301); }
                  break;
               case 301:
                  if (curChar == 42)
                     { jjCheckNAddStates(865, 867); }
                  break;
               case 302:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(303, 304); }
                  break;
               case 303:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(303, 304); }
                  break;
               case 304:
                  if (curChar == 42)
                     { jjCheckNAddStates(868, 870); }
                  break;
               case 305:
                  if (curChar == 47)
                     { jjCheckNAddStates(871, 873); }
                  break;
               case 306:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 307:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(871, 873); }
                  break;
               case 308:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(309, 310); }
                  break;
               case 309:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(309, 310); }
                  break;
               case 310:
                  if (curChar == 42)
                     { jjCheckNAddStates(874, 876); }
                  break;
               case 311:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(312, 313); }
                  break;
               case 312:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(312, 313); }
                  break;
               case 313:
                  if (curChar == 42)
                     { jjCheckNAddStates(877, 879); }
                  break;
               case 314:
                  if (curChar == 47)
                     { jjCheckNAddStates(880, 882); }
                  break;
               case 315:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 316:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(880, 882); }
                  break;
               case 317:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(318, 319); }
                  break;
               case 318:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(318, 319); }
                  break;
               case 319:
                  if (curChar == 42)
                     { jjCheckNAddStates(883, 885); }
                  break;
               case 320:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 321:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 322:
                  if (curChar == 42)
                     { jjCheckNAddStates(886, 888); }
                  break;
               case 323:
                  if (curChar == 47)
                     { jjCheckNAddStates(889, 891); }
                  break;
               case 324:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 325:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(889, 891); }
                  break;
               case 326:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 327:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(327, 328); }
                  break;
               case 328:
                  if (curChar == 42)
                     { jjCheckNAddStates(892, 894); }
                  break;
               case 329:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(330, 331); }
                  break;
               case 330:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(330, 331); }
                  break;
               case 331:
                  if (curChar == 42)
                     { jjCheckNAddStates(895, 897); }
                  break;
               case 332:
                  if (curChar == 47)
                     { jjCheckNAddStates(898, 900); }
                  break;
               case 333:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 334:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(898, 900); }
                  break;
               case 335:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(336, 337); }
                  break;
               case 336:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(336, 337); }
                  break;
               case 337:
                  if (curChar == 42)
                     { jjCheckNAddStates(901, 903); }
                  break;
               case 338:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(339, 340); }
                  break;
               case 339:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(339, 340); }
                  break;
               case 340:
                  if (curChar == 42)
                     { jjCheckNAddStates(904, 906); }
                  break;
               case 341:
                  if (curChar == 47)
                     { jjCheckNAddStates(907, 909); }
                  break;
               case 342:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 343:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(907, 909); }
                  break;
               case 344:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(345, 346); }
                  break;
               case 345:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(345, 346); }
                  break;
               case 346:
                  if (curChar == 42)
                     { jjCheckNAddStates(910, 912); }
                  break;
               case 347:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(348, 349); }
                  break;
               case 348:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(348, 349); }
                  break;
               case 349:
                  if (curChar == 42)
                     { jjCheckNAddStates(913, 915); }
                  break;
               case 350:
                  if (curChar == 47)
                     { jjCheckNAddStates(916, 918); }
                  break;
               case 351:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 352:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(916, 918); }
                  break;
               case 355:
                  if (curChar != 34)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(182, 186); }
                  break;
               case 356:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(919, 921); }
                  break;
               case 357:
                  if (curChar == 34 && kind > 37)
                     kind = 37;
                  break;
               case 359:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(919, 921); }
                  break;
               case 360:
                  if (curChar == 10)
                     { jjCheckNAddStates(919, 921); }
                  break;
               case 361:
               case 364:
                  if (curChar == 13)
                     { jjCheckNAdd(360); }
                  break;
               case 362:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(919, 921); }
                  break;
               case 363:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(922, 927); }
                  break;
               case 365:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(919, 921); }
                  break;
               case 366:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(928, 936); }
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(937, 941); }
                  break;
               case 368:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(942, 947); }
                  break;
               case 369:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(948, 954); }
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(955, 962); }
                  break;
               case 371:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 373:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 374:
                  if (curChar != 10)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 375:
               case 378:
                  if (curChar == 13)
                     { jjCheckNAdd(374); }
                  break;
               case 376:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 377:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(963, 967); }
                  break;
               case 379:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(968, 975); }
                  break;
               case 381:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(976, 979); }
                  break;
               case 382:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(980, 984); }
                  break;
               case 383:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(985, 990); }
                  break;
               case 384:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(991, 997); }
                  break;
               case 385:
                  if (curChar != 39)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(177, 181); }
                  break;
               case 386:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(998, 1000); }
                  break;
               case 387:
                  if (curChar == 39 && kind > 37)
                     kind = 37;
                  break;
               case 389:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(998, 1000); }
                  break;
               case 390:
                  if (curChar == 10)
                     { jjCheckNAddStates(998, 1000); }
                  break;
               case 391:
               case 394:
                  if (curChar == 13)
                     { jjCheckNAdd(390); }
                  break;
               case 392:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(998, 1000); }
                  break;
               case 393:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1001, 1006); }
                  break;
               case 395:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(998, 1000); }
                  break;
               case 396:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1007, 1015); }
                  break;
               case 397:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1016, 1020); }
                  break;
               case 398:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1021, 1026); }
                  break;
               case 399:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1027, 1033); }
                  break;
               case 400:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1034, 1041); }
                  break;
               case 401:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 403:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 404:
                  if (curChar != 10)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 405:
               case 408:
                  if (curChar == 13)
                     { jjCheckNAdd(404); }
                  break;
               case 406:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 407:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1042, 1046); }
                  break;
               case 409:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 410:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1047, 1054); }
                  break;
               case 411:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1055, 1058); }
                  break;
               case 412:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1059, 1063); }
                  break;
               case 413:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1064, 1069); }
                  break;
               case 414:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1070, 1076); }
                  break;
               case 415:
                  if (curChar == 45)
                     { jjAddStates(172, 176); }
                  break;
               case 417:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 419:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 420:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1077, 1081); }
                  break;
               case 421:
                  if (curChar != 10)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 422:
               case 475:
                  if (curChar == 13)
                     { jjCheckNAdd(421); }
                  break;
               case 423:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 424:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1082, 1089); }
                  break;
               case 425:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1090, 1093); }
                  break;
               case 426:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1094, 1098); }
                  break;
               case 427:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1099, 1104); }
                  break;
               case 428:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1105, 1111); }
                  break;
               case 429:
                  if (curChar == 45)
                     { jjAddStates(1112, 1113); }
                  break;
               case 431:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddTwoStates(431, 432); }
                  break;
               case 433:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddTwoStates(431, 432); }
                  break;
               case 434:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1114, 1118); }
                  break;
               case 435:
                  if (curChar != 10)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddTwoStates(431, 432); }
                  break;
               case 436:
               case 445:
                  if (curChar == 13)
                     { jjCheckNAdd(435); }
                  break;
               case 437:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddTwoStates(431, 432); }
                  break;
               case 438:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1119, 1126); }
                  break;
               case 439:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1127, 1130); }
                  break;
               case 440:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1131, 1135); }
                  break;
               case 441:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1136, 1141); }
                  break;
               case 442:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1142, 1148); }
                  break;
               case 444:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1149, 1153); }
                  break;
               case 446:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1154, 1161); }
                  break;
               case 447:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1162, 1165); }
                  break;
               case 448:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1166, 1170); }
                  break;
               case 449:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1171, 1176); }
                  break;
               case 450:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1177, 1183); }
                  break;
               case 452:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1184, 1186); }
                  break;
               case 453:
                  if (curChar == 40 && kind > 123)
                     kind = 123;
                  break;
               case 455:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1184, 1186); }
                  break;
               case 456:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1187, 1192); }
                  break;
               case 457:
                  if (curChar == 10)
                     { jjCheckNAddStates(1184, 1186); }
                  break;
               case 458:
               case 467:
                  if (curChar == 13)
                     { jjCheckNAdd(457); }
                  break;
               case 459:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1184, 1186); }
                  break;
               case 460:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1193, 1201); }
                  break;
               case 461:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1202, 1206); }
                  break;
               case 462:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1207, 1212); }
                  break;
               case 463:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1213, 1219); }
                  break;
               case 464:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1220, 1227); }
                  break;
               case 466:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1228, 1233); }
                  break;
               case 468:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1234, 1242); }
                  break;
               case 469:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1243, 1247); }
                  break;
               case 470:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1248, 1253); }
                  break;
               case 471:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1254, 1260); }
                  break;
               case 472:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1261, 1268); }
                  break;
               case 474:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1269, 1273); }
                  break;
               case 476:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1274, 1281); }
                  break;
               case 477:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1282, 1285); }
                  break;
               case 478:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1286, 1290); }
                  break;
               case 479:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1291, 1296); }
                  break;
               case 480:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1297, 1303); }
                  break;
               case 482:
                  if (curChar == 35)
                     { jjCheckNAddStates(167, 171); }
                  break;
               case 483:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(484, 497); }
                  break;
               case 485:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(485, 486); }
                  break;
               case 487:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(485, 486); }
                  break;
               case 488:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1304, 1308); }
                  break;
               case 489:
                  if (curChar != 10)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(485, 486); }
                  break;
               case 490:
               case 499:
                  if (curChar == 13)
                     { jjCheckNAdd(489); }
                  break;
               case 491:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(485, 486); }
                  break;
               case 492:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1309, 1316); }
                  break;
               case 493:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1317, 1320); }
                  break;
               case 494:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1321, 1325); }
                  break;
               case 495:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1326, 1331); }
                  break;
               case 496:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1332, 1338); }
                  break;
               case 498:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1339, 1343); }
                  break;
               case 500:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1344, 1351); }
                  break;
               case 501:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1352, 1355); }
                  break;
               case 502:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1356, 1360); }
                  break;
               case 503:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1361, 1366); }
                  break;
               case 504:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1367, 1373); }
                  break;
               case 505:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddTwoStates(505, 506); }
                  break;
               case 507:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddTwoStates(505, 506); }
                  break;
               case 508:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddStates(1374, 1378); }
                  break;
               case 509:
                  if (curChar != 10)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddTwoStates(505, 506); }
                  break;
               case 510:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 511:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddTwoStates(505, 506); }
                  break;
               case 512:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddStates(1379, 1386); }
                  break;
               case 513:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddStates(1387, 1390); }
                  break;
               case 514:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddStates(1391, 1395); }
                  break;
               case 515:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddStates(1396, 1401); }
                  break;
               case 516:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddStates(1402, 1408); }
                  break;
               case 518:
                  if (curChar == 40)
                     { jjCheckNAddStates(1409, 1414); }
                  break;
               case 519:
                  if (curChar == 34)
                     { jjCheckNAddStates(1415, 1417); }
                  break;
               case 520:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1415, 1417); }
                  break;
               case 521:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(522, 531); }
                  break;
               case 522:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1418, 1420); }
                  break;
               case 523:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(524, 525); }
                  break;
               case 524:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(524, 525); }
                  break;
               case 525:
                  if (curChar == 42)
                     { jjCheckNAddStates(1421, 1423); }
                  break;
               case 526:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(527, 528); }
                  break;
               case 527:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(527, 528); }
                  break;
               case 528:
                  if (curChar == 42)
                     { jjCheckNAddStates(1424, 1426); }
                  break;
               case 529:
                  if (curChar == 47)
                     { jjCheckNAddStates(1418, 1420); }
                  break;
               case 530:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 523;
                  break;
               case 531:
                  if (curChar == 41 && kind > 58)
                     kind = 58;
                  break;
               case 533:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1415, 1417); }
                  break;
               case 534:
                  if (curChar == 10)
                     { jjCheckNAddStates(1415, 1417); }
                  break;
               case 535:
               case 538:
                  if (curChar == 13)
                     { jjCheckNAdd(534); }
                  break;
               case 536:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1415, 1417); }
                  break;
               case 537:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1427, 1432); }
                  break;
               case 539:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1415, 1417); }
                  break;
               case 540:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1433, 1441); }
                  break;
               case 541:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1442, 1446); }
                  break;
               case 542:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1447, 1452); }
                  break;
               case 543:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1453, 1459); }
                  break;
               case 544:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1460, 1467); }
                  break;
               case 545:
                  if (curChar == 39)
                     { jjCheckNAddStates(1468, 1470); }
                  break;
               case 546:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1468, 1470); }
                  break;
               case 547:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(522, 531); }
                  break;
               case 549:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1468, 1470); }
                  break;
               case 550:
                  if (curChar == 10)
                     { jjCheckNAddStates(1468, 1470); }
                  break;
               case 551:
               case 554:
                  if (curChar == 13)
                     { jjCheckNAdd(550); }
                  break;
               case 552:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1468, 1470); }
                  break;
               case 553:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1471, 1476); }
                  break;
               case 555:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1468, 1470); }
                  break;
               case 556:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1477, 1485); }
                  break;
               case 557:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1486, 1490); }
                  break;
               case 558:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1491, 1496); }
                  break;
               case 559:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1497, 1503); }
                  break;
               case 560:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1504, 1511); }
                  break;
               case 561:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(1512, 1515); }
                  break;
               case 563:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1512, 1515); }
                  break;
               case 564:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1516, 1521); }
                  break;
               case 565:
                  if (curChar == 10)
                     { jjCheckNAddStates(1512, 1515); }
                  break;
               case 566:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 567:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1522, 1527); }
                  break;
               case 568:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1528, 1536); }
                  break;
               case 569:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1537, 1541); }
                  break;
               case 570:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1542, 1547); }
                  break;
               case 571:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1548, 1554); }
                  break;
               case 572:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1555, 1562); }
                  break;
               case 573:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1563, 1571); }
                  break;
               case 574:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(575, 576); }
                  break;
               case 575:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(575, 576); }
                  break;
               case 576:
                  if (curChar == 42)
                     { jjCheckNAddStates(1572, 1574); }
                  break;
               case 577:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(578, 579); }
                  break;
               case 578:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(578, 579); }
                  break;
               case 579:
                  if (curChar == 42)
                     { jjCheckNAddStates(1575, 1577); }
                  break;
               case 580:
                  if (curChar == 47)
                     { jjCheckNAddStates(1578, 1584); }
                  break;
               case 581:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 584:
                  if (curChar == 43)
                     { jjAddStates(1585, 1586); }
                  break;
               case 585:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 586;
                  break;
               case 586:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1587, 1590); }
                  break;
               case 587:
                  if (curChar == 63 && kind > 116)
                     kind = 116;
                  break;
               case 588:
               case 604:
               case 608:
               case 611:
               case 614:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAdd(587); }
                  break;
               case 589:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddTwoStates(587, 588); }
                  break;
               case 590:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1591, 1593); }
                  break;
               case 591:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjAddStates(1594, 1599); }
                  break;
               case 592:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 593:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 594:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 595:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(596); }
                  break;
               case 596:
                  if ((0x3ff000000000000L & l) != 0L && kind > 116)
                     kind = 116;
                  break;
               case 597:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 598:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 599;
                  break;
               case 599:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 600;
                  break;
               case 600:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAdd(587); }
                  break;
               case 601:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 602;
                  break;
               case 602:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 603:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 604;
                  break;
               case 605:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 606;
                  break;
               case 606:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 607;
                  break;
               case 607:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddTwoStates(587, 608); }
                  break;
               case 609:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 610;
                  break;
               case 610:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1600, 1602); }
                  break;
               case 612:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddTwoStates(587, 611); }
                  break;
               case 613:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1603, 1606); }
                  break;
               case 615:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddTwoStates(587, 614); }
                  break;
               case 616:
                  if (curChar != 63)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1607, 1609); }
                  break;
               case 617:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 618;
                  break;
               case 618:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(619, 625); }
                  break;
               case 619:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 620;
                  break;
               case 620:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 621;
                  break;
               case 621:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1610, 1613); }
                  break;
               case 622:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAdd(596); }
                  break;
               case 623:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddTwoStates(596, 622); }
                  break;
               case 624:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1614, 1616); }
                  break;
               case 625:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1617, 1621); }
                  break;
               case 626:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(619); }
                  break;
               case 627:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(626, 619); }
                  break;
               case 628:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1622, 1624); }
                  break;
               case 629:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1625, 1628); }
                  break;
               case 630:
                  if (curChar == 46)
                     { jjCheckNAddStates(138, 166); }
                  break;
               case 631:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(631, 633); }
                  break;
               case 634:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(634, 636); }
                  break;
               case 637:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(637, 639); }
                  break;
               case 640:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(640, 642); }
                  break;
               case 643:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(643, 645); }
                  break;
               case 646:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(646, 648); }
                  break;
               case 649:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(649, 653); }
                  break;
               case 654:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(654, 658); }
                  break;
               case 659:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(659, 661); }
                  break;
               case 662:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(662, 663); }
                  break;
               case 664:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(664, 665); }
                  break;
               case 666:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(666, 668); }
                  break;
               case 669:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(669, 671); }
                  break;
               case 672:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(672, 674); }
                  break;
               case 675:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(675, 677); }
                  break;
               case 678:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(678, 680); }
                  break;
               case 681:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1629, 1633); }
                  break;
               case 695:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(695, 697); }
                  break;
               case 698:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(698, 700); }
                  break;
               case 701:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1634, 1636); }
                  break;
               case 705:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1637, 1639); }
                  break;
               case 710:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1640, 1642); }
                  break;
               case 721:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1643, 1645); }
                  break;
               case 723:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1646, 1648); }
                  break;
               case 724:
                  if (curChar == 57 && kind > 69)
                     kind = 69;
                  break;
               case 727:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1646, 1648); }
                  break;
               case 728:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1649, 1654); }
                  break;
               case 729:
                  if (curChar == 10)
                     { jjCheckNAddStates(1646, 1648); }
                  break;
               case 730:
               case 739:
                  if (curChar == 13)
                     { jjCheckNAdd(729); }
                  break;
               case 731:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1646, 1648); }
                  break;
               case 732:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1655, 1663); }
                  break;
               case 733:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1664, 1668); }
                  break;
               case 734:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1669, 1674); }
                  break;
               case 735:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1675, 1681); }
                  break;
               case 736:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1682, 1689); }
                  break;
               case 738:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1690, 1695); }
                  break;
               case 740:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1696, 1704); }
                  break;
               case 741:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1705, 1709); }
                  break;
               case 742:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1710, 1715); }
                  break;
               case 743:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1716, 1722); }
                  break;
               case 744:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1723, 1730); }
                  break;
               case 745:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1731, 1733); }
                  break;
               case 747:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(747, 748); }
                  break;
               case 749:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(747, 748); }
                  break;
               case 750:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1734, 1738); }
                  break;
               case 751:
                  if (curChar != 10)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(747, 748); }
                  break;
               case 752:
               case 761:
                  if (curChar == 13)
                     { jjCheckNAdd(751); }
                  break;
               case 753:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(747, 748); }
                  break;
               case 754:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1739, 1746); }
                  break;
               case 755:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1747, 1750); }
                  break;
               case 756:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1751, 1755); }
                  break;
               case 757:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1756, 1761); }
                  break;
               case 758:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1762, 1768); }
                  break;
               case 760:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1769, 1773); }
                  break;
               case 762:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1774, 1781); }
                  break;
               case 763:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1782, 1785); }
                  break;
               case 764:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1786, 1790); }
                  break;
               case 765:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1791, 1796); }
                  break;
               case 766:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1797, 1803); }
                  break;
               case 767:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(767, 768); }
                  break;
               case 768:
                  if (curChar == 37 && kind > 71)
                     kind = 71;
                  break;
               case 769:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  { jjCheckNAdd(769); }
                  break;
               case 770:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(771, 784); }
                  break;
               case 772:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddTwoStates(772, 773); }
                  break;
               case 774:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddTwoStates(772, 773); }
                  break;
               case 775:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1804, 1808); }
                  break;
               case 776:
                  if (curChar != 10)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddTwoStates(772, 773); }
                  break;
               case 777:
               case 786:
                  if (curChar == 13)
                     { jjCheckNAdd(776); }
                  break;
               case 778:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddTwoStates(772, 773); }
                  break;
               case 779:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1809, 1816); }
                  break;
               case 780:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1817, 1820); }
                  break;
               case 781:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1821, 1825); }
                  break;
               case 782:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1826, 1831); }
                  break;
               case 783:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1832, 1838); }
                  break;
               case 785:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1839, 1843); }
                  break;
               case 787:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1844, 1851); }
                  break;
               case 788:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1852, 1855); }
                  break;
               case 789:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1856, 1860); }
                  break;
               case 790:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1861, 1866); }
                  break;
               case 791:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1867, 1873); }
                  break;
               case 792:
                  if (curChar == 33)
                     { jjCheckNAddStates(134, 137); }
                  break;
               case 793:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1874, 1876); }
                  break;
               case 794:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(795, 796); }
                  break;
               case 795:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(795, 796); }
                  break;
               case 796:
                  if (curChar == 42)
                     { jjCheckNAddStates(1877, 1879); }
                  break;
               case 797:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(798, 799); }
                  break;
               case 798:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(798, 799); }
                  break;
               case 799:
                  if (curChar == 42)
                     { jjCheckNAddStates(1880, 1882); }
                  break;
               case 800:
                  if (curChar == 47)
                     { jjCheckNAddStates(1874, 1876); }
                  break;
               case 801:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 794;
                  break;
               case 811:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1883, 1885); }
                  break;
               case 812:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(813, 814); }
                  break;
               case 813:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(813, 814); }
                  break;
               case 814:
                  if (curChar == 42)
                     { jjCheckNAddStates(1886, 1888); }
                  break;
               case 815:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(816, 817); }
                  break;
               case 816:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(816, 817); }
                  break;
               case 817:
                  if (curChar == 42)
                     { jjCheckNAddStates(1889, 1891); }
                  break;
               case 818:
                  if (curChar == 47)
                     { jjCheckNAddStates(1883, 1885); }
                  break;
               case 819:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 812;
                  break;
               case 821:
                  if ((0x280000000000000L & l) != 0L && kind > 74)
                     kind = 74;
                  break;
               case 824:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  { jjCheckNAddStates(0, 110); }
                  break;
               case 825:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(825, 633); }
                  break;
               case 826:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(826, 827); }
                  break;
               case 827:
                  if (curChar == 46)
                     { jjCheckNAdd(631); }
                  break;
               case 828:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(828, 636); }
                  break;
               case 829:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(829, 830); }
                  break;
               case 830:
                  if (curChar == 46)
                     { jjCheckNAdd(634); }
                  break;
               case 831:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(831, 639); }
                  break;
               case 832:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(832, 833); }
                  break;
               case 833:
                  if (curChar == 46)
                     { jjCheckNAdd(637); }
                  break;
               case 834:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(834, 642); }
                  break;
               case 835:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(835, 836); }
                  break;
               case 836:
                  if (curChar == 46)
                     { jjCheckNAdd(640); }
                  break;
               case 837:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(837, 645); }
                  break;
               case 838:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(838, 839); }
                  break;
               case 839:
                  if (curChar == 46)
                     { jjCheckNAdd(643); }
                  break;
               case 840:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(840, 648); }
                  break;
               case 841:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(841, 842); }
                  break;
               case 842:
                  if (curChar == 46)
                     { jjCheckNAdd(646); }
                  break;
               case 843:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(843, 653); }
                  break;
               case 844:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(844, 845); }
                  break;
               case 845:
                  if (curChar == 46)
                     { jjCheckNAdd(649); }
                  break;
               case 846:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(846, 658); }
                  break;
               case 847:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(847, 848); }
                  break;
               case 848:
                  if (curChar == 46)
                     { jjCheckNAdd(654); }
                  break;
               case 849:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(849, 661); }
                  break;
               case 850:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(850, 851); }
                  break;
               case 851:
                  if (curChar == 46)
                     { jjCheckNAdd(659); }
                  break;
               case 852:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(852, 663); }
                  break;
               case 853:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(853, 854); }
                  break;
               case 854:
                  if (curChar == 46)
                     { jjCheckNAdd(662); }
                  break;
               case 855:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(855, 665); }
                  break;
               case 856:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(856, 857); }
                  break;
               case 857:
                  if (curChar == 46)
                     { jjCheckNAdd(664); }
                  break;
               case 858:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(858, 668); }
                  break;
               case 859:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(859, 860); }
                  break;
               case 860:
                  if (curChar == 46)
                     { jjCheckNAdd(666); }
                  break;
               case 861:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(861, 671); }
                  break;
               case 862:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(862, 863); }
                  break;
               case 863:
                  if (curChar == 46)
                     { jjCheckNAdd(669); }
                  break;
               case 864:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(864, 674); }
                  break;
               case 865:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(865, 866); }
                  break;
               case 866:
                  if (curChar == 46)
                     { jjCheckNAdd(672); }
                  break;
               case 867:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(867, 677); }
                  break;
               case 868:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(868, 869); }
                  break;
               case 869:
                  if (curChar == 46)
                     { jjCheckNAdd(675); }
                  break;
               case 870:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(870, 680); }
                  break;
               case 871:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(871, 872); }
                  break;
               case 872:
                  if (curChar == 46)
                     { jjCheckNAdd(678); }
                  break;
               case 873:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1892, 1896); }
                  break;
               case 874:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(874, 875); }
                  break;
               case 875:
                  if (curChar == 46)
                     { jjCheckNAdd(681); }
                  break;
               case 876:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(876, 697); }
                  break;
               case 877:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(877, 878); }
                  break;
               case 878:
                  if (curChar == 46)
                     { jjCheckNAdd(695); }
                  break;
               case 879:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(879, 700); }
                  break;
               case 880:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(880, 881); }
                  break;
               case 881:
                  if (curChar == 46)
                     { jjCheckNAdd(698); }
                  break;
               case 882:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1897, 1899); }
                  break;
               case 883:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(883, 884); }
                  break;
               case 884:
                  if (curChar == 46)
                     { jjCheckNAdd(701); }
                  break;
               case 885:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1900, 1902); }
                  break;
               case 886:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(886, 887); }
                  break;
               case 887:
                  if (curChar == 46)
                     { jjCheckNAdd(705); }
                  break;
               case 888:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1903, 1905); }
                  break;
               case 889:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(889, 890); }
                  break;
               case 890:
                  if (curChar == 46)
                     { jjCheckNAdd(710); }
                  break;
               case 891:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1906, 1908); }
                  break;
               case 892:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(892, 893); }
                  break;
               case 893:
                  if (curChar == 46)
                     { jjCheckNAdd(721); }
                  break;
               case 894:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1909, 1911); }
                  break;
               case 895:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(895, 896); }
                  break;
               case 896:
                  if (curChar == 46)
                     { jjCheckNAdd(745); }
                  break;
               case 897:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(897, 768); }
                  break;
               case 898:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(898, 899); }
                  break;
               case 899:
                  if (curChar == 46)
                     { jjCheckNAdd(767); }
                  break;
               case 900:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  { jjCheckNAdd(900); }
                  break;
               case 901:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(901, 902); }
                  break;
               case 902:
                  if (curChar == 46)
                     { jjCheckNAdd(769); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 39)
                        kind = 39;
                     { jjCheckNAddStates(1912, 1916); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddStates(1917, 1920); }
                  else if (curChar == 126)
                  {
                     if (kind > 32)
                        kind = 32;
                     { jjCheckNAdd(298); }
                  }
                  else if (curChar == 64)
                     { jjAddStates(1921, 1923); }
                  else if (curChar == 123)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1924, 1926); }
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 77;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 1:
                  { jjAddStates(1927, 1928); }
                  break;
               case 3:
               case 4:
                  { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 8:
                  if (curChar == 123 && kind > 26)
                     kind = 26;
                  break;
               case 15:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(15, 16); }
                  break;
               case 16:
                  { jjCheckNAddTwoStates(16, 17); }
                  break;
               case 18:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 19:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 28:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 45:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 64)
                     { jjAddStates(1921, 1923); }
                  break;
               case 53:
               case 54:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(54, 55); }
                  break;
               case 55:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(56, 57); }
                  break;
               case 56:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(54, 55); }
                  break;
               case 57:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(204, 208); }
                  break;
               case 61:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(209, 216); }
                  break;
               case 62:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(217, 220); }
                  break;
               case 63:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(221, 225); }
                  break;
               case 64:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(226, 231); }
                  break;
               case 65:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(232, 238); }
                  break;
               case 66:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(56, 67); }
                  break;
               case 67:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(239, 243); }
                  break;
               case 69:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(244, 251); }
                  break;
               case 70:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(252, 255); }
                  break;
               case 71:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(256, 260); }
                  break;
               case 72:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(261, 266); }
                  break;
               case 73:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddStates(267, 273); }
                  break;
               case 75:
               case 259:
               case 267:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(74); }
                  break;
               case 76:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 80:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1929, 1932); }
                  break;
               case 83:
                  { jjAddStates(1933, 1934); }
                  break;
               case 85:
               case 86:
                  { jjCheckNAddTwoStates(86, 87); }
                  break;
               case 91:
               case 92:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(285, 290); }
                  break;
               case 95:
                  { jjAddStates(1935, 1936); }
                  break;
               case 97:
               case 98:
                  { jjCheckNAddTwoStates(98, 99); }
                  break;
               case 103:
               case 104:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(303, 305); }
                  break;
               case 107:
               case 108:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(311, 316); }
                  break;
               case 111:
                  { jjAddStates(1937, 1938); }
                  break;
               case 113:
               case 114:
                  { jjCheckNAddTwoStates(114, 115); }
                  break;
               case 119:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(120, 131); }
                  break;
               case 120:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(303, 305); }
                  break;
               case 121:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(120, 122); }
                  break;
               case 122:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(329, 334); }
                  break;
               case 126:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(335, 343); }
                  break;
               case 127:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(344, 348); }
                  break;
               case 128:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(349, 354); }
                  break;
               case 129:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(355, 361); }
                  break;
               case 130:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(362, 369); }
                  break;
               case 131:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(370, 375); }
                  break;
               case 133:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(376, 384); }
                  break;
               case 134:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(385, 389); }
                  break;
               case 135:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(390, 395); }
                  break;
               case 136:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(396, 402); }
                  break;
               case 137:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(403, 410); }
                  break;
               case 138:
                  if (curChar == 92)
                     { jjCheckNAddStates(1939, 1942); }
                  break;
               case 139:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(311, 316); }
                  break;
               case 140:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(411, 418); }
                  break;
               case 144:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(428, 438); }
                  break;
               case 145:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(439, 445); }
                  break;
               case 146:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(446, 453); }
                  break;
               case 147:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(454, 462); }
                  break;
               case 148:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(463, 472); }
                  break;
               case 149:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(139, 150); }
                  break;
               case 150:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(473, 480); }
                  break;
               case 152:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(481, 491); }
                  break;
               case 153:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(492, 498); }
                  break;
               case 154:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(499, 506); }
                  break;
               case 155:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(507, 515); }
                  break;
               case 156:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(516, 525); }
                  break;
               case 158:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(526, 528); }
                  break;
               case 160:
                  if (curChar == 92)
                     { jjAddStates(1943, 1946); }
                  break;
               case 164:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(526, 528); }
                  break;
               case 165:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(534, 539); }
                  break;
               case 168:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(540, 548); }
                  break;
               case 169:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(549, 553); }
                  break;
               case 170:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(554, 559); }
                  break;
               case 171:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(560, 566); }
                  break;
               case 172:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(567, 574); }
                  break;
               case 174:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(575, 577); }
                  break;
               case 176:
                  if (curChar == 92)
                     { jjAddStates(1947, 1950); }
                  break;
               case 180:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(575, 577); }
                  break;
               case 181:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(578, 583); }
                  break;
               case 184:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(584, 592); }
                  break;
               case 185:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(593, 597); }
                  break;
               case 186:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(598, 603); }
                  break;
               case 187:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(604, 610); }
                  break;
               case 188:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(611, 618); }
                  break;
               case 189:
                  if (curChar == 92)
                     { jjCheckNAddStates(1951, 1954); }
                  break;
               case 190:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(285, 290); }
                  break;
               case 191:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(619, 626); }
                  break;
               case 195:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(636, 646); }
                  break;
               case 196:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(647, 653); }
                  break;
               case 197:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(654, 661); }
                  break;
               case 198:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(662, 670); }
                  break;
               case 199:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(671, 680); }
                  break;
               case 200:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(190, 201); }
                  break;
               case 201:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(681, 688); }
                  break;
               case 203:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(689, 699); }
                  break;
               case 204:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(700, 706); }
                  break;
               case 205:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(707, 714); }
                  break;
               case 206:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(715, 723); }
                  break;
               case 207:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(724, 733); }
                  break;
               case 208:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 209:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 218:
                  { jjAddStates(1955, 1956); }
                  break;
               case 220:
               case 221:
                  { jjCheckNAddTwoStates(221, 222); }
                  break;
               case 226:
               case 227:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(749, 752); }
                  break;
               case 230:
                  { jjAddStates(1957, 1958); }
                  break;
               case 232:
               case 233:
                  { jjCheckNAddTwoStates(233, 234); }
                  break;
               case 238:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(239, 240); }
                  break;
               case 239:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(749, 752); }
                  break;
               case 240:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(762, 767); }
                  break;
               case 244:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(774, 782); }
                  break;
               case 245:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(783, 787); }
                  break;
               case 246:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(788, 793); }
                  break;
               case 247:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(794, 800); }
                  break;
               case 248:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(801, 808); }
                  break;
               case 249:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(239, 250); }
                  break;
               case 250:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(809, 814); }
                  break;
               case 252:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(815, 823); }
                  break;
               case 253:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(824, 828); }
                  break;
               case 254:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(829, 834); }
                  break;
               case 255:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(835, 841); }
                  break;
               case 256:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(842, 849); }
                  break;
               case 260:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 261:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 262:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 264:
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 265:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 266:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 268:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 270:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 272:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 275:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 277:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 280:
                  { jjAddStates(1959, 1960); }
                  break;
               case 282:
               case 283:
                  { jjCheckNAddTwoStates(283, 284); }
                  break;
               case 289:
                  { jjAddStates(1961, 1962); }
                  break;
               case 291:
               case 292:
                  { jjCheckNAddTwoStates(292, 293); }
                  break;
               case 297:
                  if (curChar == 126)
                     { jjCheckNAdd(298); }
                  break;
               case 300:
                  { jjAddStates(1963, 1964); }
                  break;
               case 302:
               case 303:
                  { jjCheckNAddTwoStates(303, 304); }
                  break;
               case 309:
                  { jjAddStates(1965, 1966); }
                  break;
               case 311:
               case 312:
                  { jjCheckNAddTwoStates(312, 313); }
                  break;
               case 318:
                  { jjAddStates(1967, 1968); }
                  break;
               case 320:
               case 321:
                  { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 327:
                  { jjAddStates(1969, 1970); }
                  break;
               case 329:
               case 330:
                  { jjCheckNAddTwoStates(330, 331); }
                  break;
               case 336:
                  { jjAddStates(1971, 1972); }
                  break;
               case 338:
               case 339:
                  { jjCheckNAddTwoStates(339, 340); }
                  break;
               case 345:
                  { jjAddStates(1973, 1974); }
                  break;
               case 347:
               case 348:
                  { jjCheckNAddTwoStates(348, 349); }
                  break;
               case 353:
                  if (curChar == 126 && kind > 32)
                     kind = 32;
                  break;
               case 354:
                  if (curChar != 126)
                     break;
                  if (kind > 32)
                     kind = 32;
                  { jjCheckNAdd(298); }
                  break;
               case 356:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(919, 921); }
                  break;
               case 358:
                  if (curChar == 92)
                     { jjAddStates(1975, 1978); }
                  break;
               case 362:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(919, 921); }
                  break;
               case 363:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(922, 927); }
                  break;
               case 366:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(928, 936); }
                  break;
               case 367:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(937, 941); }
                  break;
               case 368:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(942, 947); }
                  break;
               case 369:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(948, 954); }
                  break;
               case 370:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(955, 962); }
                  break;
               case 371:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 372:
                  if (curChar == 92)
                     { jjAddStates(1979, 1982); }
                  break;
               case 376:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 377:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(963, 967); }
                  break;
               case 380:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(968, 975); }
                  break;
               case 381:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(976, 979); }
                  break;
               case 382:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(980, 984); }
                  break;
               case 383:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(985, 990); }
                  break;
               case 384:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(991, 997); }
                  break;
               case 386:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(998, 1000); }
                  break;
               case 388:
                  if (curChar == 92)
                     { jjAddStates(1983, 1986); }
                  break;
               case 392:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(998, 1000); }
                  break;
               case 393:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1001, 1006); }
                  break;
               case 396:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1007, 1015); }
                  break;
               case 397:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1016, 1020); }
                  break;
               case 398:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1021, 1026); }
                  break;
               case 399:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1027, 1033); }
                  break;
               case 400:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1034, 1041); }
                  break;
               case 401:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 402:
                  if (curChar == 92)
                     { jjAddStates(1987, 1990); }
                  break;
               case 406:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 407:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1042, 1046); }
                  break;
               case 410:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1047, 1054); }
                  break;
               case 411:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1055, 1058); }
                  break;
               case 412:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1059, 1063); }
                  break;
               case 413:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1064, 1069); }
                  break;
               case 414:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1070, 1076); }
                  break;
               case 416:
               case 417:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 418:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(419, 420); }
                  break;
               case 419:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 420:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1077, 1081); }
                  break;
               case 424:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1082, 1089); }
                  break;
               case 425:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1090, 1093); }
                  break;
               case 426:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1094, 1098); }
                  break;
               case 427:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1099, 1104); }
                  break;
               case 428:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1105, 1111); }
                  break;
               case 430:
               case 431:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddTwoStates(431, 432); }
                  break;
               case 432:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(433, 434); }
                  break;
               case 433:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddTwoStates(431, 432); }
                  break;
               case 434:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1114, 1118); }
                  break;
               case 438:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1119, 1126); }
                  break;
               case 439:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1127, 1130); }
                  break;
               case 440:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1131, 1135); }
                  break;
               case 441:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1136, 1141); }
                  break;
               case 442:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1142, 1148); }
                  break;
               case 443:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(433, 444); }
                  break;
               case 444:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1149, 1153); }
                  break;
               case 446:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1154, 1161); }
                  break;
               case 447:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1162, 1165); }
                  break;
               case 448:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1166, 1170); }
                  break;
               case 449:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1171, 1176); }
                  break;
               case 450:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddStates(1177, 1183); }
                  break;
               case 451:
               case 452:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1184, 1186); }
                  break;
               case 454:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(455, 456); }
                  break;
               case 455:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1184, 1186); }
                  break;
               case 456:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1187, 1192); }
                  break;
               case 460:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1193, 1201); }
                  break;
               case 461:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1202, 1206); }
                  break;
               case 462:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1207, 1212); }
                  break;
               case 463:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1213, 1219); }
                  break;
               case 464:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1220, 1227); }
                  break;
               case 465:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(455, 466); }
                  break;
               case 466:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1228, 1233); }
                  break;
               case 468:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1234, 1242); }
                  break;
               case 469:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1243, 1247); }
                  break;
               case 470:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1248, 1253); }
                  break;
               case 471:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1254, 1260); }
                  break;
               case 472:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1261, 1268); }
                  break;
               case 473:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(419, 474); }
                  break;
               case 474:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1269, 1273); }
                  break;
               case 476:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1274, 1281); }
                  break;
               case 477:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1282, 1285); }
                  break;
               case 478:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1286, 1290); }
                  break;
               case 479:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1291, 1296); }
                  break;
               case 480:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1297, 1303); }
                  break;
               case 481:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1912, 1916); }
                  break;
               case 484:
               case 485:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(485, 486); }
                  break;
               case 486:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(487, 488); }
                  break;
               case 487:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(485, 486); }
                  break;
               case 488:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1304, 1308); }
                  break;
               case 492:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1309, 1316); }
                  break;
               case 493:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1317, 1320); }
                  break;
               case 494:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1321, 1325); }
                  break;
               case 495:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1326, 1331); }
                  break;
               case 496:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1332, 1338); }
                  break;
               case 497:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(487, 498); }
                  break;
               case 498:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1339, 1343); }
                  break;
               case 500:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1344, 1351); }
                  break;
               case 501:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1352, 1355); }
                  break;
               case 502:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1356, 1360); }
                  break;
               case 503:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1361, 1366); }
                  break;
               case 504:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddStates(1367, 1373); }
                  break;
               case 505:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddTwoStates(505, 506); }
                  break;
               case 506:
                  if (curChar == 92)
                     { jjAddStates(1991, 1992); }
                  break;
               case 507:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddTwoStates(505, 506); }
                  break;
               case 508:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddStates(1374, 1378); }
                  break;
               case 512:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddStates(1379, 1386); }
                  break;
               case 513:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddStates(1387, 1390); }
                  break;
               case 514:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddStates(1391, 1395); }
                  break;
               case 515:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddStates(1396, 1401); }
                  break;
               case 516:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddStates(1402, 1408); }
                  break;
               case 517:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1924, 1926); }
                  break;
               case 520:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1415, 1417); }
                  break;
               case 524:
                  { jjAddStates(1993, 1994); }
                  break;
               case 526:
               case 527:
                  { jjCheckNAddTwoStates(527, 528); }
                  break;
               case 532:
                  if (curChar == 92)
                     { jjAddStates(1995, 1998); }
                  break;
               case 536:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1415, 1417); }
                  break;
               case 537:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1427, 1432); }
                  break;
               case 540:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1433, 1441); }
                  break;
               case 541:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1442, 1446); }
                  break;
               case 542:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1447, 1452); }
                  break;
               case 543:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1453, 1459); }
                  break;
               case 544:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1460, 1467); }
                  break;
               case 546:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1468, 1470); }
                  break;
               case 548:
                  if (curChar == 92)
                     { jjAddStates(1999, 2002); }
                  break;
               case 552:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1468, 1470); }
                  break;
               case 553:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1471, 1476); }
                  break;
               case 556:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1477, 1485); }
                  break;
               case 557:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1486, 1490); }
                  break;
               case 558:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1491, 1496); }
                  break;
               case 559:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1497, 1503); }
                  break;
               case 560:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1504, 1511); }
                  break;
               case 561:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1512, 1515); }
                  break;
               case 562:
                  if (curChar == 92)
                     { jjAddStates(2003, 2004); }
                  break;
               case 563:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1512, 1515); }
                  break;
               case 564:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1516, 1521); }
                  break;
               case 568:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1528, 1536); }
                  break;
               case 569:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1537, 1541); }
                  break;
               case 570:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1542, 1547); }
                  break;
               case 571:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1548, 1554); }
                  break;
               case 572:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1555, 1562); }
                  break;
               case 575:
                  { jjAddStates(2005, 2006); }
                  break;
               case 577:
               case 578:
                  { jjCheckNAddTwoStates(578, 579); }
                  break;
               case 582:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 518;
                  break;
               case 583:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 582;
                  break;
               case 591:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjAddStates(1594, 1599); }
                  break;
               case 592:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 593:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 594:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 595:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(596); }
                  break;
               case 596:
                  if ((0x7e0000007eL & l) != 0L && kind > 116)
                     kind = 116;
                  break;
               case 597:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 598:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 599;
                  break;
               case 599:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 600;
                  break;
               case 600:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 587;
                  break;
               case 601:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 602;
                  break;
               case 602:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 603:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 604;
                  break;
               case 605:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 606;
                  break;
               case 606:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 607;
                  break;
               case 609:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 610;
                  break;
               case 618:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(619, 625); }
                  break;
               case 620:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjstateSet[jjnewStateCnt++] = 621;
                  break;
               case 621:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1610, 1613); }
                  break;
               case 622:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAdd(596); }
                  break;
               case 623:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddTwoStates(596, 622); }
                  break;
               case 624:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  { jjCheckNAddStates(1614, 1616); }
                  break;
               case 625:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1617, 1621); }
                  break;
               case 626:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(619); }
                  break;
               case 627:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(626, 619); }
                  break;
               case 628:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1622, 1624); }
                  break;
               case 629:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1625, 1628); }
                  break;
               case 632:
                  if ((0x200000002000L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 633:
               case 641:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(632); }
                  break;
               case 635:
                  if ((0x100000001000000L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 636:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 635;
                  break;
               case 638:
                  if ((0x10000000100L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 639:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 638;
                  break;
               case 642:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 641;
                  break;
               case 644:
                  if ((0x80000000800000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 645:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 644;
                  break;
               case 647:
                  if ((0x10000000100L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 648:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 647;
                  break;
               case 650:
                  if ((0x400000004000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 651:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 650;
                  break;
               case 652:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 651;
                  break;
               case 653:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 652;
                  break;
               case 655:
                  if ((0x100000001000000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 656:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 655;
                  break;
               case 657:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 656;
                  break;
               case 658:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 657;
                  break;
               case 660:
                  if ((0x200000002000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 661:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(660); }
                  break;
               case 663:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAdd(660); }
                  break;
               case 665:
                  if ((0x2000000020000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 667:
                  if ((0x400000004000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 668:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 667;
                  break;
               case 670:
                  if ((0x10000000100000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 671:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 670;
                  break;
               case 673:
                  if ((0x800000008L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 674:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 673;
                  break;
               case 676:
                  if ((0x100000001000000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 677:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 676;
                  break;
               case 679:
                  if ((0x4000000040000L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 680:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 679;
                  break;
               case 682:
                  if ((0x8000000080L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 683:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 682;
                  break;
               case 684:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 683;
                  break;
               case 685:
                  if ((0x1000000010L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 686:
               case 689:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(685); }
                  break;
               case 687:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 686;
                  break;
               case 688:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 687;
                  break;
               case 690:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 689;
                  break;
               case 691:
                  if ((0x400000004000L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 692:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 691;
                  break;
               case 693:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 692;
                  break;
               case 694:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 693;
                  break;
               case 696:
                  if ((0x400000004L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 697:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 696;
                  break;
               case 699:
                  if ((0x10000000100000L & l) != 0L && kind > 65)
                     kind = 65;
                  break;
               case 700:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 699;
                  break;
               case 702:
               case 704:
                  if ((0x8000000080000L & l) != 0L && kind > 66)
                     kind = 66;
                  break;
               case 703:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 702;
                  break;
               case 706:
                  if ((0x400000004000000L & l) != 0L && kind > 67)
                     kind = 67;
                  break;
               case 707:
               case 708:
                  if ((0x10000000100L & l) != 0L)
                     { jjCheckNAdd(706); }
                  break;
               case 709:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 708;
                  break;
               case 711:
               case 718:
                  if ((0x100000001000000L & l) != 0L && kind > 68)
                     kind = 68;
                  break;
               case 712:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(2007, 2009); }
                  break;
               case 713:
                  if ((0x20000000200L & l) != 0L && kind > 68)
                     kind = 68;
                  break;
               case 714:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 713;
                  break;
               case 715:
                  if ((0x200000002000L & l) != 0L && kind > 68)
                     kind = 68;
                  break;
               case 716:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 715;
                  break;
               case 717:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 716;
                  break;
               case 719:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 718;
                  break;
               case 720:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 719;
                  break;
               case 722:
               case 723:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1646, 1648); }
                  break;
               case 725:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 724;
                  break;
               case 726:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(727, 728); }
                  break;
               case 727:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1646, 1648); }
                  break;
               case 728:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1649, 1654); }
                  break;
               case 732:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1655, 1663); }
                  break;
               case 733:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1664, 1668); }
                  break;
               case 734:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1669, 1674); }
                  break;
               case 735:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1675, 1681); }
                  break;
               case 736:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1682, 1689); }
                  break;
               case 737:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(727, 738); }
                  break;
               case 738:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1690, 1695); }
                  break;
               case 740:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1696, 1704); }
                  break;
               case 741:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1705, 1709); }
                  break;
               case 742:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1710, 1715); }
                  break;
               case 743:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1716, 1722); }
                  break;
               case 744:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1723, 1730); }
                  break;
               case 746:
               case 747:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(747, 748); }
                  break;
               case 748:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(749, 750); }
                  break;
               case 749:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(747, 748); }
                  break;
               case 750:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1734, 1738); }
                  break;
               case 754:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1739, 1746); }
                  break;
               case 755:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1747, 1750); }
                  break;
               case 756:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1751, 1755); }
                  break;
               case 757:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1756, 1761); }
                  break;
               case 758:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1762, 1768); }
                  break;
               case 759:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(749, 760); }
                  break;
               case 760:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1769, 1773); }
                  break;
               case 762:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1774, 1781); }
                  break;
               case 763:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1782, 1785); }
                  break;
               case 764:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1786, 1790); }
                  break;
               case 765:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1791, 1796); }
                  break;
               case 766:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddStates(1797, 1803); }
                  break;
               case 771:
               case 772:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddTwoStates(772, 773); }
                  break;
               case 773:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(774, 775); }
                  break;
               case 774:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddTwoStates(772, 773); }
                  break;
               case 775:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1804, 1808); }
                  break;
               case 779:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1809, 1816); }
                  break;
               case 780:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1817, 1820); }
                  break;
               case 781:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1821, 1825); }
                  break;
               case 782:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1826, 1831); }
                  break;
               case 783:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1832, 1838); }
                  break;
               case 784:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(774, 785); }
                  break;
               case 785:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1839, 1843); }
                  break;
               case 787:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1844, 1851); }
                  break;
               case 788:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1852, 1855); }
                  break;
               case 789:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1856, 1860); }
                  break;
               case 790:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1861, 1866); }
                  break;
               case 791:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddStates(1867, 1873); }
                  break;
               case 795:
                  { jjAddStates(2010, 2011); }
                  break;
               case 797:
               case 798:
                  { jjCheckNAddTwoStates(798, 799); }
                  break;
               case 802:
                  if ((0x10000000100000L & l) != 0L && kind > 73)
                     kind = 73;
                  break;
               case 803:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 802;
                  break;
               case 804:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 803;
                  break;
               case 805:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 804;
                  break;
               case 806:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 805;
                  break;
               case 807:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 806;
                  break;
               case 808:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 807;
                  break;
               case 809:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 808;
                  break;
               case 810:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 809;
                  break;
               case 813:
                  { jjAddStates(2012, 2013); }
                  break;
               case 815:
               case 816:
                  { jjCheckNAddTwoStates(816, 817); }
                  break;
               case 820:
                  if ((0x2000000020L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 821;
                  break;
               case 822:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 820;
                  break;
               case 823:
                  if (curChar == 92)
                     { jjCheckNAddStates(1917, 1920); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(1912, 1916); }
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1927, 1928); }
                  break;
               case 3:
               case 4:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 16:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(200, 201); }
                  break;
               case 53:
               case 54:
               case 56:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(54, 55); }
                  break;
               case 83:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1933, 1934); }
                  break;
               case 85:
               case 86:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(86, 87); }
                  break;
               case 91:
               case 92:
               case 190:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(285, 290); }
                  break;
               case 95:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1935, 1936); }
                  break;
               case 97:
               case 98:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(98, 99); }
                  break;
               case 103:
               case 104:
               case 120:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(303, 305); }
                  break;
               case 107:
               case 108:
               case 139:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(311, 316); }
                  break;
               case 111:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1937, 1938); }
                  break;
               case 113:
               case 114:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(114, 115); }
                  break;
               case 158:
               case 164:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(526, 528); }
                  break;
               case 174:
               case 180:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(575, 577); }
                  break;
               case 218:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1955, 1956); }
                  break;
               case 220:
               case 221:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(221, 222); }
                  break;
               case 226:
               case 227:
               case 239:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(749, 752); }
                  break;
               case 230:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1957, 1958); }
                  break;
               case 232:
               case 233:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(233, 234); }
                  break;
               case 280:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1959, 1960); }
                  break;
               case 282:
               case 283:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(283, 284); }
                  break;
               case 289:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1961, 1962); }
                  break;
               case 291:
               case 292:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(292, 293); }
                  break;
               case 300:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1963, 1964); }
                  break;
               case 302:
               case 303:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(303, 304); }
                  break;
               case 309:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1965, 1966); }
                  break;
               case 311:
               case 312:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(312, 313); }
                  break;
               case 318:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1967, 1968); }
                  break;
               case 320:
               case 321:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(321, 322); }
                  break;
               case 327:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1969, 1970); }
                  break;
               case 329:
               case 330:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(330, 331); }
                  break;
               case 336:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1971, 1972); }
                  break;
               case 338:
               case 339:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(339, 340); }
                  break;
               case 345:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1973, 1974); }
                  break;
               case 347:
               case 348:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(348, 349); }
                  break;
               case 356:
               case 362:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(919, 921); }
                  break;
               case 371:
               case 376:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(371, 372); }
                  break;
               case 386:
               case 392:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(998, 1000); }
                  break;
               case 401:
               case 406:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(401, 402); }
                  break;
               case 416:
               case 417:
               case 419:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 430:
               case 431:
               case 433:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 43)
                     kind = 43;
                  { jjCheckNAddTwoStates(431, 432); }
                  break;
               case 451:
               case 452:
               case 455:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1184, 1186); }
                  break;
               case 484:
               case 485:
               case 487:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 40)
                     kind = 40;
                  { jjCheckNAddTwoStates(485, 486); }
                  break;
               case 505:
               case 507:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 41)
                     kind = 41;
                  { jjCheckNAddTwoStates(505, 506); }
                  break;
               case 520:
               case 536:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1415, 1417); }
                  break;
               case 524:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1993, 1994); }
                  break;
               case 526:
               case 527:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(527, 528); }
                  break;
               case 546:
               case 552:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1468, 1470); }
                  break;
               case 561:
               case 563:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1512, 1515); }
                  break;
               case 575:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(2005, 2006); }
                  break;
               case 577:
               case 578:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(578, 579); }
                  break;
               case 722:
               case 723:
               case 727:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1646, 1648); }
                  break;
               case 746:
               case 747:
               case 749:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAddTwoStates(747, 748); }
                  break;
               case 771:
               case 772:
               case 774:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 117)
                     kind = 117;
                  { jjCheckNAddTwoStates(772, 773); }
                  break;
               case 795:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(2010, 2011); }
                  break;
               case 797:
               case 798:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(798, 799); }
                  break;
               case 813:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(2012, 2013); }
                  break;
               case 815:
               case 816:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(816, 817); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 903 - (jjnewStateCnt = startsAt)))
         break;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { break; }
   }
   if (jjmatchedPos > strPos)
      return curPos;

   int toRet = Math.max(curPos, seenUpto);

   if (curPos < toRet)
      for (i = toRet - Math.min(curPos, seenUpto); i-- > 0; )
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) { throw new Error("Internal Error : Please send a bug report."); }

   if (jjmatchedPos < strPos)
   {
      jjmatchedKind = strKind;
      jjmatchedPos = strPos;
   }
   else if (jjmatchedPos == strPos && jjmatchedKind > strKind)
      jjmatchedKind = strKind;

   return toRet;
}
static final int[] jjnextStates = {
   825, 826, 827, 633, 828, 829, 830, 636, 831, 832, 833, 639, 834, 835, 836, 642, 
   837, 838, 839, 645, 840, 841, 842, 648, 843, 844, 845, 653, 846, 847, 848, 658, 
   849, 850, 851, 661, 852, 853, 854, 663, 855, 856, 857, 665, 858, 859, 860, 668, 
   861, 862, 863, 671, 864, 865, 866, 674, 867, 868, 869, 677, 870, 871, 872, 680, 
   873, 874, 875, 684, 688, 690, 694, 876, 877, 878, 697, 879, 880, 881, 700, 882, 
   883, 884, 703, 704, 885, 886, 887, 707, 709, 888, 889, 890, 711, 891, 892, 893, 
   722, 894, 895, 896, 746, 897, 898, 899, 768, 900, 901, 902, 759, 737, 712, 286, 
   287, 295, 296, 297, 306, 307, 8, 315, 316, 9, 324, 325, 10, 333, 334, 12, 
   342, 343, 13, 351, 352, 353, 793, 810, 811, 822, 631, 634, 637, 640, 643, 646, 
   649, 654, 659, 662, 664, 666, 669, 672, 675, 678, 681, 695, 698, 701, 705, 710, 
   721, 745, 767, 769, 770, 771, 784, 483, 484, 505, 506, 497, 416, 429, 451, 465, 
   473, 386, 387, 401, 402, 388, 356, 357, 371, 372, 358, 266, 277, 214, 81, 90, 
   91, 200, 2, 3, 6, 3, 5, 6, 16, 17, 53, 66, 54, 59, 60, 55, 
   61, 54, 62, 59, 60, 55, 63, 64, 65, 54, 59, 60, 55, 54, 62, 59, 
   60, 55, 54, 62, 59, 60, 55, 63, 54, 62, 59, 60, 55, 63, 64, 68, 
   60, 54, 55, 69, 70, 68, 60, 54, 55, 71, 72, 73, 68, 60, 54, 55, 
   70, 68, 60, 54, 55, 70, 68, 60, 54, 55, 71, 70, 68, 60, 54, 55, 
   71, 72, 89, 90, 91, 200, 81, 84, 85, 88, 85, 87, 88, 92, 93, 102, 
   103, 118, 189, 101, 102, 103, 118, 119, 93, 96, 97, 100, 97, 99, 100, 104, 
   105, 121, 106, 107, 157, 173, 149, 102, 103, 108, 109, 118, 138, 102, 103, 117, 
   118, 119, 109, 112, 113, 116, 113, 115, 116, 104, 124, 125, 105, 121, 126, 104, 
   127, 124, 125, 105, 121, 128, 129, 130, 104, 124, 125, 105, 121, 104, 127, 124, 
   125, 105, 121, 104, 127, 124, 125, 105, 121, 128, 104, 127, 124, 125, 105, 121, 
   128, 129, 132, 125, 104, 105, 121, 133, 134, 132, 125, 104, 105, 121, 135, 136, 
   137, 132, 125, 104, 105, 121, 134, 132, 125, 104, 105, 121, 134, 132, 125, 104, 
   105, 121, 135, 134, 132, 125, 104, 105, 121, 135, 136, 102, 103, 108, 142, 118, 
   138, 143, 144, 102, 103, 108, 109, 117, 118, 119, 109, 138, 102, 103, 108, 145, 
   142, 118, 138, 143, 146, 147, 148, 102, 103, 108, 142, 118, 138, 143, 102, 103, 
   108, 145, 142, 118, 138, 143, 102, 103, 108, 145, 142, 118, 138, 143, 146, 102, 
   103, 108, 145, 142, 118, 138, 143, 146, 147, 102, 103, 151, 108, 118, 138, 143, 
   152, 102, 103, 153, 151, 108, 118, 138, 143, 154, 155, 156, 102, 103, 151, 108, 
   118, 138, 143, 102, 103, 153, 151, 108, 118, 138, 143, 102, 103, 153, 151, 108, 
   118, 138, 143, 154, 102, 103, 153, 151, 108, 118, 138, 143, 154, 155, 158, 159, 
   160, 102, 103, 109, 118, 119, 158, 166, 167, 159, 160, 168, 158, 169, 166, 167, 
   159, 160, 170, 171, 172, 158, 166, 167, 159, 160, 158, 169, 166, 167, 159, 160, 
   158, 169, 166, 167, 159, 160, 170, 158, 169, 166, 167, 159, 160, 170, 171, 174, 
   175, 176, 174, 182, 183, 175, 176, 184, 174, 185, 182, 183, 175, 176, 186, 187, 
   188, 174, 182, 183, 175, 176, 174, 185, 182, 183, 175, 176, 174, 185, 182, 183, 
   175, 176, 186, 174, 185, 182, 183, 175, 176, 186, 187, 92, 193, 102, 103, 118, 
   189, 194, 195, 92, 93, 101, 102, 103, 118, 119, 93, 189, 92, 196, 193, 102, 
   103, 118, 189, 194, 197, 198, 199, 92, 193, 102, 103, 118, 189, 194, 92, 196, 
   193, 102, 103, 118, 189, 194, 92, 196, 193, 102, 103, 118, 189, 194, 197, 92, 
   196, 193, 102, 103, 118, 189, 194, 197, 198, 202, 92, 102, 103, 118, 189, 194, 
   203, 204, 202, 92, 102, 103, 118, 189, 194, 205, 206, 207, 202, 92, 102, 103, 
   118, 189, 194, 204, 202, 92, 102, 103, 118, 189, 194, 204, 202, 92, 102, 103, 
   118, 189, 194, 205, 204, 202, 92, 102, 103, 118, 189, 194, 205, 206, 216, 225, 
   226, 249, 224, 225, 226, 249, 216, 219, 220, 223, 220, 222, 223, 227, 228, 237, 
   238, 236, 237, 228, 231, 232, 235, 232, 234, 235, 227, 242, 237, 238, 243, 244, 
   227, 228, 236, 237, 228, 238, 227, 245, 242, 237, 238, 243, 246, 247, 248, 227, 
   242, 237, 238, 243, 227, 245, 242, 237, 238, 243, 227, 245, 242, 237, 238, 243, 
   246, 227, 245, 242, 237, 238, 243, 246, 247, 251, 227, 237, 238, 243, 252, 253, 
   251, 227, 237, 238, 243, 254, 255, 256, 251, 227, 237, 238, 243, 253, 251, 227, 
   237, 238, 243, 253, 251, 227, 237, 238, 243, 254, 253, 251, 227, 237, 238, 243, 
   254, 255, 281, 282, 285, 282, 284, 285, 290, 291, 294, 291, 293, 294, 295, 296, 
   297, 301, 302, 305, 302, 304, 305, 306, 307, 8, 310, 311, 314, 311, 313, 314, 
   315, 316, 9, 319, 320, 323, 320, 322, 323, 324, 325, 10, 328, 329, 332, 329, 
   331, 332, 333, 334, 12, 337, 338, 341, 338, 340, 341, 342, 343, 13, 346, 347, 
   350, 347, 349, 350, 351, 352, 353, 356, 357, 358, 356, 364, 365, 357, 358, 366, 
   356, 367, 364, 365, 357, 358, 368, 369, 370, 356, 364, 365, 357, 358, 356, 367, 
   364, 365, 357, 358, 356, 367, 364, 365, 357, 358, 368, 356, 367, 364, 365, 357, 
   358, 368, 369, 371, 378, 379, 372, 380, 371, 381, 378, 379, 372, 382, 383, 384, 
   371, 378, 379, 372, 371, 381, 378, 379, 372, 371, 381, 378, 379, 372, 382, 371, 
   381, 378, 379, 372, 382, 383, 386, 387, 388, 386, 394, 395, 387, 388, 396, 386, 
   397, 394, 395, 387, 388, 398, 399, 400, 386, 394, 395, 387, 388, 386, 397, 394, 
   395, 387, 388, 386, 397, 394, 395, 387, 388, 398, 386, 397, 394, 395, 387, 388, 
   398, 399, 401, 408, 409, 402, 410, 401, 411, 408, 409, 402, 412, 413, 414, 401, 
   408, 409, 402, 401, 411, 408, 409, 402, 401, 411, 408, 409, 402, 412, 401, 411, 
   408, 409, 402, 412, 413, 417, 422, 423, 418, 424, 417, 425, 422, 423, 418, 426, 
   427, 428, 417, 422, 423, 418, 417, 425, 422, 423, 418, 417, 425, 422, 423, 418, 
   426, 417, 425, 422, 423, 418, 426, 427, 430, 443, 431, 436, 437, 432, 438, 431, 
   439, 436, 437, 432, 440, 441, 442, 431, 436, 437, 432, 431, 439, 436, 437, 432, 
   431, 439, 436, 437, 432, 440, 431, 439, 436, 437, 432, 440, 441, 445, 437, 431, 
   432, 446, 447, 445, 437, 431, 432, 448, 449, 450, 445, 437, 431, 432, 447, 445, 
   437, 431, 432, 447, 445, 437, 431, 432, 448, 447, 445, 437, 431, 432, 448, 449, 
   452, 453, 454, 452, 458, 459, 453, 454, 460, 452, 461, 458, 459, 453, 454, 462, 
   463, 464, 452, 458, 459, 453, 454, 452, 461, 458, 459, 453, 454, 452, 461, 458, 
   459, 453, 454, 462, 452, 461, 458, 459, 453, 454, 462, 463, 467, 459, 452, 453, 
   454, 468, 469, 467, 459, 452, 453, 454, 470, 471, 472, 467, 459, 452, 453, 454, 
   469, 467, 459, 452, 453, 454, 469, 467, 459, 452, 453, 454, 470, 469, 467, 459, 
   452, 453, 454, 470, 471, 475, 423, 417, 418, 476, 477, 475, 423, 417, 418, 478, 
   479, 480, 475, 423, 417, 418, 477, 475, 423, 417, 418, 477, 475, 423, 417, 418, 
   478, 477, 475, 423, 417, 418, 478, 479, 485, 490, 491, 486, 492, 485, 493, 490, 
   491, 486, 494, 495, 496, 485, 490, 491, 486, 485, 493, 490, 491, 486, 485, 493, 
   490, 491, 486, 494, 485, 493, 490, 491, 486, 494, 495, 499, 491, 485, 486, 500, 
   501, 499, 491, 485, 486, 502, 503, 504, 499, 491, 485, 486, 501, 499, 491, 485, 
   486, 501, 499, 491, 485, 486, 502, 501, 499, 491, 485, 486, 502, 503, 505, 510, 
   511, 506, 512, 505, 513, 510, 511, 506, 514, 515, 516, 505, 510, 511, 506, 505, 
   513, 510, 511, 506, 505, 513, 510, 511, 506, 514, 505, 513, 510, 511, 506, 514, 
   515, 519, 545, 561, 531, 562, 573, 520, 521, 532, 530, 531, 522, 525, 526, 529, 
   526, 528, 529, 520, 538, 539, 521, 532, 540, 520, 541, 538, 539, 521, 532, 542, 
   543, 544, 520, 538, 539, 521, 532, 520, 541, 538, 539, 521, 532, 520, 541, 538, 
   539, 521, 532, 542, 520, 541, 538, 539, 521, 532, 542, 543, 546, 547, 548, 546, 
   554, 555, 547, 548, 556, 546, 557, 554, 555, 547, 548, 558, 559, 560, 546, 554, 
   555, 547, 548, 546, 557, 554, 555, 547, 548, 546, 557, 554, 555, 547, 548, 558, 
   546, 557, 554, 555, 547, 548, 558, 559, 561, 522, 531, 562, 561, 566, 531, 562, 
   567, 568, 561, 522, 530, 531, 522, 562, 561, 569, 566, 531, 562, 567, 570, 571, 
   572, 561, 566, 531, 562, 567, 561, 569, 566, 531, 562, 567, 561, 569, 566, 531, 
   562, 567, 570, 561, 569, 566, 531, 562, 567, 570, 571, 581, 519, 545, 561, 530, 
   531, 522, 562, 573, 576, 577, 580, 577, 579, 580, 581, 519, 545, 561, 531, 562, 
   573, 585, 591, 587, 588, 589, 590, 587, 588, 589, 592, 597, 601, 605, 609, 613, 
   587, 611, 612, 587, 614, 615, 616, 587, 614, 615, 596, 622, 623, 624, 596, 622, 
   623, 626, 619, 627, 628, 629, 626, 619, 627, 626, 619, 627, 628, 681, 684, 688, 
   690, 694, 701, 703, 704, 705, 707, 709, 710, 711, 712, 721, 722, 737, 723, 725, 
   726, 723, 730, 731, 725, 726, 732, 723, 733, 730, 731, 725, 726, 734, 735, 736, 
   723, 730, 731, 725, 726, 723, 733, 730, 731, 725, 726, 723, 733, 730, 731, 725, 
   726, 734, 723, 733, 730, 731, 725, 726, 734, 735, 739, 731, 723, 725, 726, 740, 
   741, 739, 731, 723, 725, 726, 742, 743, 744, 739, 731, 723, 725, 726, 741, 739, 
   731, 723, 725, 726, 741, 739, 731, 723, 725, 726, 742, 741, 739, 731, 723, 725, 
   726, 742, 743, 745, 746, 759, 747, 752, 753, 748, 754, 747, 755, 752, 753, 748, 
   756, 757, 758, 747, 752, 753, 748, 747, 755, 752, 753, 748, 747, 755, 752, 753, 
   748, 756, 747, 755, 752, 753, 748, 756, 757, 761, 753, 747, 748, 762, 763, 761, 
   753, 747, 748, 764, 765, 766, 761, 753, 747, 748, 763, 761, 753, 747, 748, 763, 
   761, 753, 747, 748, 764, 763, 761, 753, 747, 748, 764, 765, 772, 777, 778, 773, 
   779, 772, 780, 777, 778, 773, 781, 782, 783, 772, 777, 778, 773, 772, 780, 777, 
   778, 773, 772, 780, 777, 778, 773, 781, 772, 780, 777, 778, 773, 781, 782, 786, 
   778, 772, 773, 787, 788, 786, 778, 772, 773, 789, 790, 791, 786, 778, 772, 773, 
   788, 786, 778, 772, 773, 788, 786, 778, 772, 773, 789, 788, 786, 778, 772, 773, 
   789, 790, 801, 810, 793, 796, 797, 800, 797, 799, 800, 819, 822, 811, 814, 815, 
   818, 815, 817, 818, 873, 684, 688, 690, 694, 882, 703, 704, 885, 707, 709, 888, 
   711, 712, 891, 722, 737, 894, 746, 759, 417, 452, 453, 454, 418, 419, 474, 455, 
   466, 52, 53, 66, 583, 584, 617, 1, 2, 81, 90, 91, 200, 83, 84, 95, 
   96, 111, 112, 120, 131, 139, 140, 161, 163, 164, 165, 177, 179, 180, 181, 190, 
   191, 120, 131, 218, 219, 230, 231, 280, 281, 289, 290, 300, 301, 309, 310, 318, 
   319, 327, 328, 336, 337, 345, 346, 359, 361, 362, 363, 373, 375, 376, 377, 389, 
   391, 392, 393, 403, 405, 406, 407, 507, 508, 524, 525, 533, 535, 536, 537, 549, 
   551, 552, 553, 563, 564, 575, 576, 714, 717, 720, 795, 796, 813, 814, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, "\74\41\55\55", "\55\55\76", 
null, "\174\75", null, null, "\55", null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, "\175", "\136\75", "\44\75", "\52\75", 
"\75", "\73", "\57", "\133", "\135", "\52", "\56", "\51", "\50", "\72", null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, "\72\72", null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, "\41", "\44", 
"\45", "\46", "\140", "\77", "\74", "\174", "\74\75", };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         matchedToken.specialToken = specialToken;
         return matchedToken;
      }
      else
      {
         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
         {
            matchedToken = jjFillToken();
            if (specialToken == null)
               specialToken = matchedToken;
            else
            {
               matchedToken.specialToken = specialToken;
               specialToken = (specialToken.next = matchedToken);
            }
         }
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public CssParserTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public CssParserTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream)
  {
	
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 903; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit( SimpleCharStream stream, int lexState)
  {
  
    ReInit( stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0xffffffffffe00001L, 0xfff007ffffffffffL, 0x7fL, 
};
static final long[] jjtoSkip = {
   0x2L, 0x0L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x2L, 0x0L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[903];
    private final int[] jjstateSet = new int[2 * 903];

    
    protected int curChar;
}
